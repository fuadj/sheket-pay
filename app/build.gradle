apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

def keystorePropertiesFile = rootProject.file("keystore.properties")

def keystoreProperties = new Properties();

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        SheketPayReleaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.mukera.sheket.sheketpay"
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.SheketPayReleaseConfig
        }
    }
}

def grpcVersion = '1.0.0'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:design:23.0.0'
    compile 'com.android.support:gridlayout-v7:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'
    compile 'com.android.support:cardview-v7:23.0.0'
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:support-annotations:23.0.0'
    compile 'com.google.code.gson:gson:2.3.1'

    // We are sticking with 4.5.0 b/c after that minSdk is 15
    // see https://developers.facebook.com/docs/android/upgrading-4.x#450to451
    compile 'com.facebook.android:facebook-android-sdk:4.5.0'

    // to use a custom "Facebook log-in" button
    compile 'com.github.medyo:fancybuttons:1.8.1'

    // google analytics requires this dependency
    compile 'com.google.android.gms:play-services:6.5.+'

    // the annotations is need for the generated source
    compile 'javax.annotation:javax.annotation-api:1.2'
    compile "io.grpc:grpc-okhttp:${grpcVersion}"
    compile "io.grpc:grpc-protobuf-lite:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = "com.google.protobuf:protoc:3.0.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            javalite {}
            grpc {
                option 'lite'
            }
        }
    }
}
